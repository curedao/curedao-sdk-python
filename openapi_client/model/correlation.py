"""
    CureDAO Unified Health API

    A platform for participant-centered research and personal data exploration  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

import nulltype  # noqa: F401

from openapi_client.model_utils import (  # noqa: F401
    ApiTypeError,
    ModelComposed,
    ModelNormal,
    ModelSimple,
    cached_property,
    change_keys_js_to_python,
    convert_js_args_to_python_args,
    date,
    datetime,
    file_type,
    none_type,
    validate_get_composed_info,
)

def lazy_import():
    from openapi_client.model.data_source import DataSource
    from openapi_client.model.study_html import StudyHtml
    from openapi_client.model.study_images import StudyImages
    from openapi_client.model.study_links import StudyLinks
    from openapi_client.model.study_text import StudyText
    globals()['DataSource'] = DataSource
    globals()['StudyHtml'] = StudyHtml
    globals()['StudyImages'] = StudyImages
    globals()['StudyLinks'] = StudyLinks
    globals()['StudyText'] = StudyText


class Correlation(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
      allowed_values (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          with a capitalized key describing the allowed value and an allowed
          value. These dicts store the allowed enum values.
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
      validations (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          that stores validations for max_length, min_length, max_items,
          min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
          inclusive_minimum, and regex.
      additional_properties_type (tuple): A tuple of classes accepted
          as additional properties values.
    """

    allowed_values = {
    }

    validations = {
    }

    additional_properties_type = None

    _nullable = False

    @cached_property
    def openapi_types():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_types (dict): The key is attribute name
                and the value is attribute type.
        """
        lazy_import()
        return {
            'cause_variable_name': (str,),  # noqa: E501
            'effect_variable_name': (str,),  # noqa: E501
            'average_daily_high_cause': (float,),  # noqa: E501
            'average_daily_low_cause': (float,),  # noqa: E501
            'average_effect': (float,),  # noqa: E501
            'average_effect_following_high_cause': (float,),  # noqa: E501
            'average_effect_following_low_cause': (float,),  # noqa: E501
            'average_forward_pearson_correlation_over_onset_delays': (float,),  # noqa: E501
            'average_reverse_pearson_correlation_over_onset_delays': (float,),  # noqa: E501
            'average_vote': (float,),  # noqa: E501
            'cause_changes': (int,),  # noqa: E501
            'cause_data_source': (DataSource,),  # noqa: E501
            'cause_user_variable_share_user_measurements': (int,),  # noqa: E501
            'cause_variable_category_id': (int,),  # noqa: E501
            'cause_variable_category_name': (str,),  # noqa: E501
            'cause_variable_combination_operation': (str,),  # noqa: E501
            'cause_variable_unit_abbreviated_name': (str,),  # noqa: E501
            'cause_variable_id': (int,),  # noqa: E501
            'cause_variable_most_common_connector_id': (int,),  # noqa: E501
            'confidence_interval': (float,),  # noqa: E501
            'confidence_level': (str,),  # noqa: E501
            'correlation_coefficient': (float,),  # noqa: E501
            'correlation_is_contradictory_to_optimal_values': (bool,),  # noqa: E501
            'created_at': (str,),  # noqa: E501
            'critical_t_value': (float,),  # noqa: E501
            'direction': (str,),  # noqa: E501
            'duration_of_action': (int,),  # noqa: E501
            'duration_of_action_in_hours': (float,),  # noqa: E501
            'degrees_of_freedom': (int,),  # noqa: E501
            'effect_number_of_processed_daily_measurements': (int,),  # noqa: E501
            'error': (str,),  # noqa: E501
            'effect_changes': (int,),  # noqa: E501
            'effect_data_source': (DataSource,),  # noqa: E501
            'effect_size': (str,),  # noqa: E501
            'effect_unit': (str,),  # noqa: E501
            'effect_user_variable_share_user_measurements': (int,),  # noqa: E501
            'effect_variable_category_id': (int,),  # noqa: E501
            'effect_variable_category_name': (str,),  # noqa: E501
            'effect_variable_combination_operation': (str,),  # noqa: E501
            'effect_variable_common_alias': (str,),  # noqa: E501
            'effect_variable_unit_abbreviated_name': (str,),  # noqa: E501
            'effect_variable_unit_id': (int,),  # noqa: E501
            'effect_variable_unit_name': (str,),  # noqa: E501
            'effect_variable_id': (int,),  # noqa: E501
            'effect_variable_most_common_connector_id': (int,),  # noqa: E501
            'experiment_end_time': (str,),  # noqa: E501
            'experiment_start_time': (str,),  # noqa: E501
            'forward_spearman_correlation_coefficient': (float,),  # noqa: E501
            'number_of_pairs': (int,),  # noqa: E501
            'onset_delay': (int,),  # noqa: E501
            'onset_delay_in_hours': (float,),  # noqa: E501
            'onset_delay_with_strongest_pearson_correlation': (int,),  # noqa: E501
            'onset_delay_with_strongest_pearson_correlation_in_hours': (float,),  # noqa: E501
            'optimal_pearson_product': (float,),  # noqa: E501
            'outcome_filling_value': (int,),  # noqa: E501
            'outcome_maximum_allowed_value': (float,),  # noqa: E501
            'outcome_minimum_allowed_value': (float,),  # noqa: E501
            'pearson_correlation_with_no_onset_delay': (float,),  # noqa: E501
            'predictive_pearson_correlation': (float,),  # noqa: E501
            'predictive_pearson_correlation_coefficient': (float,),  # noqa: E501
            'predictor_data_sources': (str,),  # noqa: E501
            'predictor_filling_value': (int,),  # noqa: E501
            'predictor_maximum_allowed_value': (float,),  # noqa: E501
            'predictor_minimum_allowed_value': (float,),  # noqa: E501
            'predicts_high_effect_change': (int,),  # noqa: E501
            'predicts_low_effect_change': (int,),  # noqa: E501
            'p_value': (float,),  # noqa: E501
            'qm_score': (float,),  # noqa: E501
            'reverse_pearson_correlation_coefficient': (float,),  # noqa: E501
            'share_user_measurements': (bool,),  # noqa: E501
            'sharing_description': (str,),  # noqa: E501
            'sharing_title': (str,),  # noqa: E501
            'significant_difference': (bool,),  # noqa: E501
            'statistical_significance': (float,),  # noqa: E501
            'strength_level': (str,),  # noqa: E501
            'strongest_pearson_correlation_coefficient': (float,),  # noqa: E501
            'study_html': (StudyHtml,),  # noqa: E501
            'study_images': (StudyImages,),  # noqa: E501
            'study_links': (StudyLinks,),  # noqa: E501
            'study_text': (StudyText,),  # noqa: E501
            't_value': (float,),  # noqa: E501
            'updated_at': (str,),  # noqa: E501
            'user_id': (int,),  # noqa: E501
            'user_vote': (int,),  # noqa: E501
            'value_predicting_high_outcome': (float,),  # noqa: E501
            'value_predicting_low_outcome': (float,),  # noqa: E501
            'outcome_data_sources': (str,),  # noqa: E501
            'principal_investigator': (str,),  # noqa: E501
            'reverse_correlation': (float,),  # noqa: E501
            'average_pearson_correlation_coefficient_over_onset_delays': (float,),  # noqa: E501
            'cause_number_of_raw_measurements': (int,),  # noqa: E501
            'correlations_over_durations_of_action': ([Correlation],),  # noqa: E501
            'correlations_over_onset_delays': ([Correlation],),  # noqa: E501
            'correlations_over_durations_of_action_chart_config': ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},),  # noqa: E501
            'correlations_over_onset_delays_chart_config': ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},),  # noqa: E501
            'number_of_users': (float,),  # noqa: E501
            'raw_cause_measurement_significance': (float,),  # noqa: E501
            'raw_effect_measurement_significance': (float,),  # noqa: E501
            'reverse_pairs_count': (str,),  # noqa: E501
            'vote_statistical_significance': (int,),  # noqa: E501
            'aggregate_qm_score': (float,),  # noqa: E501
            'forward_pearson_correlation_coefficient': (float,),  # noqa: E501
            'number_of_correlations': (int,),  # noqa: E501
            'vote': (float,),  # noqa: E501
        }

    @cached_property
    def discriminator():
        return None


    attribute_map = {
        'cause_variable_name': 'causeVariableName',  # noqa: E501
        'effect_variable_name': 'effectVariableName',  # noqa: E501
        'average_daily_high_cause': 'averageDailyHighCause',  # noqa: E501
        'average_daily_low_cause': 'averageDailyLowCause',  # noqa: E501
        'average_effect': 'averageEffect',  # noqa: E501
        'average_effect_following_high_cause': 'averageEffectFollowingHighCause',  # noqa: E501
        'average_effect_following_low_cause': 'averageEffectFollowingLowCause',  # noqa: E501
        'average_forward_pearson_correlation_over_onset_delays': 'averageForwardPearsonCorrelationOverOnsetDelays',  # noqa: E501
        'average_reverse_pearson_correlation_over_onset_delays': 'averageReversePearsonCorrelationOverOnsetDelays',  # noqa: E501
        'average_vote': 'averageVote',  # noqa: E501
        'cause_changes': 'causeChanges',  # noqa: E501
        'cause_data_source': 'causeDataSource',  # noqa: E501
        'cause_user_variable_share_user_measurements': 'causeUserVariableShareUserMeasurements',  # noqa: E501
        'cause_variable_category_id': 'causeVariableCategoryId',  # noqa: E501
        'cause_variable_category_name': 'causeVariableCategoryName',  # noqa: E501
        'cause_variable_combination_operation': 'causeVariableCombinationOperation',  # noqa: E501
        'cause_variable_unit_abbreviated_name': 'causeVariableUnitAbbreviatedName',  # noqa: E501
        'cause_variable_id': 'causeVariableId',  # noqa: E501
        'cause_variable_most_common_connector_id': 'causeVariableMostCommonConnectorId',  # noqa: E501
        'confidence_interval': 'confidenceInterval',  # noqa: E501
        'confidence_level': 'confidenceLevel',  # noqa: E501
        'correlation_coefficient': 'correlationCoefficient',  # noqa: E501
        'correlation_is_contradictory_to_optimal_values': 'correlationIsContradictoryToOptimalValues',  # noqa: E501
        'created_at': 'createdAt',  # noqa: E501
        'critical_t_value': 'criticalTValue',  # noqa: E501
        'direction': 'direction',  # noqa: E501
        'duration_of_action': 'durationOfAction',  # noqa: E501
        'duration_of_action_in_hours': 'durationOfActionInHours',  # noqa: E501
        'degrees_of_freedom': 'degreesOfFreedom',  # noqa: E501
        'effect_number_of_processed_daily_measurements': 'effectNumberOfProcessedDailyMeasurements',  # noqa: E501
        'error': 'error',  # noqa: E501
        'effect_changes': 'effectChanges',  # noqa: E501
        'effect_data_source': 'effectDataSource',  # noqa: E501
        'effect_size': 'effectSize',  # noqa: E501
        'effect_unit': 'effectUnit',  # noqa: E501
        'effect_user_variable_share_user_measurements': 'effectUserVariableShareUserMeasurements',  # noqa: E501
        'effect_variable_category_id': 'effectVariableCategoryId',  # noqa: E501
        'effect_variable_category_name': 'effectVariableCategoryName',  # noqa: E501
        'effect_variable_combination_operation': 'effectVariableCombinationOperation',  # noqa: E501
        'effect_variable_common_alias': 'effectVariableCommonAlias',  # noqa: E501
        'effect_variable_unit_abbreviated_name': 'effectVariableUnitAbbreviatedName',  # noqa: E501
        'effect_variable_unit_id': 'effectVariableUnitId',  # noqa: E501
        'effect_variable_unit_name': 'effectVariableUnitName',  # noqa: E501
        'effect_variable_id': 'effectVariableId',  # noqa: E501
        'effect_variable_most_common_connector_id': 'effectVariableMostCommonConnectorId',  # noqa: E501
        'experiment_end_time': 'experimentEndTime',  # noqa: E501
        'experiment_start_time': 'experimentStartTime',  # noqa: E501
        'forward_spearman_correlation_coefficient': 'forwardSpearmanCorrelationCoefficient',  # noqa: E501
        'number_of_pairs': 'numberOfPairs',  # noqa: E501
        'onset_delay': 'onsetDelay',  # noqa: E501
        'onset_delay_in_hours': 'onsetDelayInHours',  # noqa: E501
        'onset_delay_with_strongest_pearson_correlation': 'onsetDelayWithStrongestPearsonCorrelation',  # noqa: E501
        'onset_delay_with_strongest_pearson_correlation_in_hours': 'onsetDelayWithStrongestPearsonCorrelationInHours',  # noqa: E501
        'optimal_pearson_product': 'optimalPearsonProduct',  # noqa: E501
        'outcome_filling_value': 'outcomeFillingValue',  # noqa: E501
        'outcome_maximum_allowed_value': 'outcomeMaximumAllowedValue',  # noqa: E501
        'outcome_minimum_allowed_value': 'outcomeMinimumAllowedValue',  # noqa: E501
        'pearson_correlation_with_no_onset_delay': 'pearsonCorrelationWithNoOnsetDelay',  # noqa: E501
        'predictive_pearson_correlation': 'predictivePearsonCorrelation',  # noqa: E501
        'predictive_pearson_correlation_coefficient': 'predictivePearsonCorrelationCoefficient',  # noqa: E501
        'predictor_data_sources': 'predictorDataSources',  # noqa: E501
        'predictor_filling_value': 'predictorFillingValue',  # noqa: E501
        'predictor_maximum_allowed_value': 'predictorMaximumAllowedValue',  # noqa: E501
        'predictor_minimum_allowed_value': 'predictorMinimumAllowedValue',  # noqa: E501
        'predicts_high_effect_change': 'predictsHighEffectChange',  # noqa: E501
        'predicts_low_effect_change': 'predictsLowEffectChange',  # noqa: E501
        'p_value': 'pValue',  # noqa: E501
        'qm_score': 'qmScore',  # noqa: E501
        'reverse_pearson_correlation_coefficient': 'reversePearsonCorrelationCoefficient',  # noqa: E501
        'share_user_measurements': 'shareUserMeasurements',  # noqa: E501
        'sharing_description': 'sharingDescription',  # noqa: E501
        'sharing_title': 'sharingTitle',  # noqa: E501
        'significant_difference': 'significantDifference',  # noqa: E501
        'statistical_significance': 'statisticalSignificance',  # noqa: E501
        'strength_level': 'strengthLevel',  # noqa: E501
        'strongest_pearson_correlation_coefficient': 'strongestPearsonCorrelationCoefficient',  # noqa: E501
        'study_html': 'studyHtml',  # noqa: E501
        'study_images': 'studyImages',  # noqa: E501
        'study_links': 'studyLinks',  # noqa: E501
        'study_text': 'studyText',  # noqa: E501
        't_value': 'tValue',  # noqa: E501
        'updated_at': 'updatedAt',  # noqa: E501
        'user_id': 'userId',  # noqa: E501
        'user_vote': 'userVote',  # noqa: E501
        'value_predicting_high_outcome': 'valuePredictingHighOutcome',  # noqa: E501
        'value_predicting_low_outcome': 'valuePredictingLowOutcome',  # noqa: E501
        'outcome_data_sources': 'outcomeDataSources',  # noqa: E501
        'principal_investigator': 'principalInvestigator',  # noqa: E501
        'reverse_correlation': 'reverseCorrelation',  # noqa: E501
        'average_pearson_correlation_coefficient_over_onset_delays': 'averagePearsonCorrelationCoefficientOverOnsetDelays',  # noqa: E501
        'cause_number_of_raw_measurements': 'causeNumberOfRawMeasurements',  # noqa: E501
        'correlations_over_durations_of_action': 'correlationsOverDurationsOfAction',  # noqa: E501
        'correlations_over_onset_delays': 'correlationsOverOnsetDelays',  # noqa: E501
        'correlations_over_durations_of_action_chart_config': 'correlationsOverDurationsOfActionChartConfig',  # noqa: E501
        'correlations_over_onset_delays_chart_config': 'correlationsOverOnsetDelaysChartConfig',  # noqa: E501
        'number_of_users': 'numberOfUsers',  # noqa: E501
        'raw_cause_measurement_significance': 'rawCauseMeasurementSignificance',  # noqa: E501
        'raw_effect_measurement_significance': 'rawEffectMeasurementSignificance',  # noqa: E501
        'reverse_pairs_count': 'reversePairsCount',  # noqa: E501
        'vote_statistical_significance': 'voteStatisticalSignificance',  # noqa: E501
        'aggregate_qm_score': 'aggregateQMScore',  # noqa: E501
        'forward_pearson_correlation_coefficient': 'forwardPearsonCorrelationCoefficient',  # noqa: E501
        'number_of_correlations': 'numberOfCorrelations',  # noqa: E501
        'vote': 'vote',  # noqa: E501
    }

    _composed_schemas = {}

    required_properties = set([
        '_data_store',
        '_check_type',
        '_spec_property_naming',
        '_path_to_item',
        '_configuration',
        '_visited_composed_classes',
    ])

    @convert_js_args_to_python_args
    def __init__(self, cause_variable_name, effect_variable_name, *args, **kwargs):  # noqa: E501
        """Correlation - a model defined in OpenAPI

        Args:
            cause_variable_name (str): Ex: Sleep Quality
            effect_variable_name (str): Ex: Overall Mood

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            average_daily_high_cause (float): Ex: 4.19. [optional]  # noqa: E501
            average_daily_low_cause (float): Ex: 1.97. [optional]  # noqa: E501
            average_effect (float): Ex: 3.0791054117396. [optional]  # noqa: E501
            average_effect_following_high_cause (float): Ex: 3.55. [optional]  # noqa: E501
            average_effect_following_low_cause (float): Ex: 2.65. [optional]  # noqa: E501
            average_forward_pearson_correlation_over_onset_delays (float): Ex: 0.396. [optional]  # noqa: E501
            average_reverse_pearson_correlation_over_onset_delays (float): Ex: 0.453667. [optional]  # noqa: E501
            average_vote (float): Ex: 0.9855. [optional]  # noqa: E501
            cause_changes (int): Ex: 164. [optional]  # noqa: E501
            cause_data_source (DataSource): [optional]  # noqa: E501
            cause_user_variable_share_user_measurements (int): Ex: 1. [optional]  # noqa: E501
            cause_variable_category_id (int): Ex: 6. [optional]  # noqa: E501
            cause_variable_category_name (str): Ex: Sleep. [optional]  # noqa: E501
            cause_variable_combination_operation (str): Ex: MEAN. [optional]  # noqa: E501
            cause_variable_unit_abbreviated_name (str): Ex: /5. [optional]  # noqa: E501
            cause_variable_id (int): Ex: 1448. [optional]  # noqa: E501
            cause_variable_most_common_connector_id (int): Ex: 6. [optional]  # noqa: E501
            confidence_interval (float): Ex: 0.14344467795996. [optional]  # noqa: E501
            confidence_level (str): Ex: high. [optional]  # noqa: E501
            correlation_coefficient (float): Ex: 0.538. [optional]  # noqa: E501
            correlation_is_contradictory_to_optimal_values (bool): Ex: false. [optional]  # noqa: E501
            created_at (str): Ex: 2016-12-28 20:47:30 UTC ISO 8601 YYYY-MM-DDThh:mm:ss. [optional]  # noqa: E501
            critical_t_value (float): Calculated Statistic: Ex: 1.646. [optional]  # noqa: E501
            direction (str): Ex: higher. [optional]  # noqa: E501
            duration_of_action (int): User-Defined Variable Setting: The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.  Unit: Seconds. [optional]  # noqa: E501
            duration_of_action_in_hours (float): User-Defined Variable Setting: The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.  Unit: Hours. [optional]  # noqa: E501
            degrees_of_freedom (int): Ex: 200. [optional]  # noqa: E501
            effect_number_of_processed_daily_measurements (int): Ex: 145. [optional]  # noqa: E501
            error (str): Ex: optimalPearsonProduct is not defined. [optional]  # noqa: E501
            effect_changes (int): Ex: 193. [optional]  # noqa: E501
            effect_data_source (DataSource): [optional]  # noqa: E501
            effect_size (str): Ex: moderately positive. [optional]  # noqa: E501
            effect_unit (str): Ex: /5. [optional]  # noqa: E501
            effect_user_variable_share_user_measurements (int): Ex: 1. [optional]  # noqa: E501
            effect_variable_category_id (int): Ex: 1. [optional]  # noqa: E501
            effect_variable_category_name (str): Ex: Emotions. [optional]  # noqa: E501
            effect_variable_combination_operation (str): Ex: MEAN. [optional]  # noqa: E501
            effect_variable_common_alias (str): Ex: Mood_(psychology). [optional]  # noqa: E501
            effect_variable_unit_abbreviated_name (str): Ex: /5. [optional]  # noqa: E501
            effect_variable_unit_id (int): Ex: 10. [optional]  # noqa: E501
            effect_variable_unit_name (str): Ex: 1 to 5 Rating. [optional]  # noqa: E501
            effect_variable_id (int): Ex: 1398. [optional]  # noqa: E501
            effect_variable_most_common_connector_id (int): Ex: 10. [optional]  # noqa: E501
            experiment_end_time (str): Ex: 2014-07-30 12:50:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss. [optional]  # noqa: E501
            experiment_start_time (str): Ex: 2012-05-06 21:15:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss. [optional]  # noqa: E501
            forward_spearman_correlation_coefficient (float): Ex: 0.528359. [optional]  # noqa: E501
            number_of_pairs (int): Ex: 298. [optional]  # noqa: E501
            onset_delay (int): Ex: 0. [optional]  # noqa: E501
            onset_delay_in_hours (float): Ex: 0. [optional]  # noqa: E501
            onset_delay_with_strongest_pearson_correlation (int): Ex: -86400. [optional]  # noqa: E501
            onset_delay_with_strongest_pearson_correlation_in_hours (float): Ex: -24. [optional]  # noqa: E501
            optimal_pearson_product (float): Ex: 0.68582816186982. [optional]  # noqa: E501
            outcome_filling_value (int): User-Defined Variable Setting: Ex: -1. Unit: User-specified or common.. [optional]  # noqa: E501
            outcome_maximum_allowed_value (float): User-Defined Variable Setting: Ex: 23. Unit: User-specified or common.. [optional]  # noqa: E501
            outcome_minimum_allowed_value (float): User-Defined Variable Setting: Ex: 0.1. Unit: User-specified or common.. [optional]  # noqa: E501
            pearson_correlation_with_no_onset_delay (float): Ex: 0.477. [optional]  # noqa: E501
            predictive_pearson_correlation (float): Ex: 0.538. [optional]  # noqa: E501
            predictive_pearson_correlation_coefficient (float): Ex: 0.538. [optional]  # noqa: E501
            predictor_data_sources (str): Ex: RescueTime. [optional]  # noqa: E501
            predictor_filling_value (int): Ex: -1. Unit: User-specified or common.. [optional]  # noqa: E501
            predictor_maximum_allowed_value (float): Ex: 200. Unit: User-specified or common.. [optional]  # noqa: E501
            predictor_minimum_allowed_value (float): Ex: 30. Unit: User-specified or common.. [optional]  # noqa: E501
            predicts_high_effect_change (int): Ex: 17. Unit: User-specified or common.. [optional]  # noqa: E501
            predicts_low_effect_change (int): Ex: -11. Unit: User-specified or common.. [optional]  # noqa: E501
            p_value (float): Ex: 0.39628900511586. [optional]  # noqa: E501
            qm_score (float): Ex: 0.528. [optional]  # noqa: E501
            reverse_pearson_correlation_coefficient (float): Ex: 0.01377184270977. [optional]  # noqa: E501
            share_user_measurements (bool): Would you like to make this study publicly visible?. [optional]  # noqa: E501
            sharing_description (str): Ex: N1 Study: Sleep Quality Predicts Higher Overall Mood. [optional]  # noqa: E501
            sharing_title (str): Ex: N1 Study: Sleep Quality Predicts Higher Overall Mood. [optional]  # noqa: E501
            significant_difference (bool): Ex: 1. [optional]  # noqa: E501
            statistical_significance (float): Ex: 0.9813. [optional]  # noqa: E501
            strength_level (str): Ex: moderate. [optional]  # noqa: E501
            strongest_pearson_correlation_coefficient (float): Ex: 0.613. [optional]  # noqa: E501
            study_html (StudyHtml): [optional]  # noqa: E501
            study_images (StudyImages): [optional]  # noqa: E501
            study_links (StudyLinks): [optional]  # noqa: E501
            study_text (StudyText): [optional]  # noqa: E501
            t_value (float): Ex: 9.6986079652717. [optional]  # noqa: E501
            updated_at (str): Ex: 2017-05-06 15:40:38 UTC ISO 8601 YYYY-MM-DDThh:mm:ss. [optional]  # noqa: E501
            user_id (int): Ex: 230. [optional]  # noqa: E501
            user_vote (int): Ex: 1. [optional]  # noqa: E501
            value_predicting_high_outcome (float): Ex: 4.14. [optional]  # noqa: E501
            value_predicting_low_outcome (float): Ex: 3.03. [optional]  # noqa: E501
            outcome_data_sources (str): Sources used to collect data for the outcome variable. [optional]  # noqa: E501
            principal_investigator (str): Mike Sinn. [optional]  # noqa: E501
            reverse_correlation (float): Correlation when cause and effect are reversed. For any causal relationship, the forward correlation should exceed the reverse correlation.. [optional]  # noqa: E501
            average_pearson_correlation_coefficient_over_onset_delays (float): Ex: . [optional]  # noqa: E501
            cause_number_of_raw_measurements (int): Ex: 14764. [optional]  # noqa: E501
            correlations_over_durations_of_action ([Correlation]): Correlations calculated with various duration of action hyper-parameters. [optional]  # noqa: E501
            correlations_over_onset_delays ([Correlation]): Correlations calculated with various onset delay hyper-parameters. [optional]  # noqa: E501
            correlations_over_durations_of_action_chart_config ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}): Highchart config illustrating correlations calculated with various duration of action hyper-parameters. [optional]  # noqa: E501
            correlations_over_onset_delays_chart_config ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}): Highchart config illustrating correlations calculated with various onset delay hyper-parameters. [optional]  # noqa: E501
            number_of_users (float): Ex: 1. [optional]  # noqa: E501
            raw_cause_measurement_significance (float): Ex: 1. [optional]  # noqa: E501
            raw_effect_measurement_significance (float): Ex: 1. [optional]  # noqa: E501
            reverse_pairs_count (str): Ex: 1. [optional]  # noqa: E501
            vote_statistical_significance (int): Ex: 1. [optional]  # noqa: E501
            aggregate_qm_score (float): Ex: 0.011598441286655. [optional]  # noqa: E501
            forward_pearson_correlation_coefficient (float): Ex: 0.0333. [optional]  # noqa: E501
            number_of_correlations (int): Ex: 6. [optional]  # noqa: E501
            vote (float): Ex: 1 or 0. [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        self.cause_variable_name = cause_variable_name
        self.effect_variable_name = effect_variable_name
        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
